from autoGeneratedMazeClasses import *



autoMaze = autoGeneratedMaze(100,100,200,200,10,10)
autoPlayer = autoGenPlayer(100,100,autoMaze.cellLength)
autoMaze.generateMaze()
autoMaze.solution = autoMaze.findSolution()

def restartMaze(app): #used to restart maze and player, then generate maze again
    autoMaze.reset()
    autoPlayer.reset()
    autoMaze.generateMaze()

def autoMazeDraw(app): #draws all of nesseary UI components including maze
    autoMaze.drawScore() #maze, player, score, instruction and sol/powerup
    if autoMaze.showSolution == True: #if needed
        autoMaze.drawSol(autoMaze.solution)

    autoMaze.drawInstructions()
    autoMaze.drawAutoMaze()

    if not autoMaze.powerUp:
        autoMaze.drawPowerUp()
    autoMaze.drawGoal()
    
    autoPlayer.drawPlayer()

def autoMazeOnStep(app):
    pass

def autoMazeMousePress(app,mouseX,mouseY):
    pass

def autoMazeOnKeyPress(app,key):
    #used to move the player
    if key == 'right':
        autoPlayer.move(1,0,autoMaze)
    elif key == 'left':
        autoPlayer.move(-1,0,autoMaze)
    elif key == 'down':
        autoPlayer.move(0,1,autoMaze)
    elif key == 'up':
        autoPlayer.move(0,-1,autoMaze)

    elif key == 'h': #used to display hints by calling the solution function
        autoMaze.showSolution = not autoMaze.showSolution #toggles the sol
        autoMaze.solution = autoMaze.findSolution(start = (autoPlayer.yIndex,autoPlayer.xIndex),target = (autoMaze.powerY,autoMaze.powerX))  
    elif key == 'a':
        autoMaze.showSolution = not autoMaze.showSolution
        autoMaze.solution = autoMaze.findSolution(start = (autoPlayer.yIndex,autoPlayer.xIndex))

    if autoMaze.gameOver == True:
        restartMaze(app) #calls to see if the maze is over each time a key is 
        #pressed